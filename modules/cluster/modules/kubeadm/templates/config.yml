apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
  - token: ${bootstrap_token}
    description: "kubeadm bootstrap token"
    ttl: "24h"
    usages:
      - authentication
      - signing
    groups:
      - system:bootstrappers:kubeadm:default-node-token
  - token: ${admin_token}
    description: "admin token"
    usages:
      - authentication
      - signing
    groups:
      - system:bootstrappers:kubeadm:default-node-token
nodeRegistration:
  name: ${node_name}
  criSocket: unix:///var/run/crio/crio.sock
  imagePullPolicy: IfNotPresent
localAPIEndpoint:
  advertiseAddress: "${local_api_endpoint}"
  bindPort: 6443
skipPhases:
  - addon/kube-proxy
---
apiServer:
  timeoutForControlPlane: 4m0s
controllerManager:
  extraArgs:
    cluster-signing-cert-file: ${root}/ca.crt
    cluster-signing-key-file: ${root}/ca.key
    enable-hostpath-provisioner: "true"
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
etcd:
  local:
    dataDir: "/var/lib/etcd"
networking:
  serviceSubnet: 10.96.0.0/12
  podSubnet: ${pod_subnet}
  dnsDomain: "cluster.local"
kubernetesVersion: ${version}
controlPlaneEndpoint: "k8s.appkins.net"
scheduler: {}
certificatesDir: /etc/kubernetes/pki
imageRepository: registry.k8s.io
clusterName: ${id}
